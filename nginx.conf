server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name qrlwallet.com www.qrlwallet.com;

    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/qrlwallet/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/qrlwallet/key.priv;
    include /etc/nginx/ssl/cloudflare_options.conf;

    # Root directory for static files
    root /var/www/zondwebwallet;
    index index.html;

    # Security Headers
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-eval' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; connect-src 'self' https://qrlwallet.com/api/*; img-src 'self' data:; font-src 'self' data:;" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Backend API proxy with improved error handling
    location /api/zond-rpc/ {
        proxy_pass http://localhost:3000/api/zond-rpc/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Error handling
        proxy_intercept_errors on;
        error_page 502 503 504 = @backend_down;
    }

    # Health check endpoint
    location /api/health {
        proxy_pass http://localhost:3000/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_cache_bypass $http_upgrade;
        
        # Error handling
        proxy_intercept_errors on;
        error_page 502 503 504 = @backend_down;
    }

    # Backend down handler
    location @backend_down {
        add_header Content-Type application/json;
        return 503 '{"error": "Backend service temporarily unavailable"}';
    }

    # Handle static assets
    location /assets {
        expires 1y;
        add_header Cache-Control "public, no-transform";
        try_files $uri =404;
    }

    # Handle SPA routes
    location / {
        # First attempt to serve request as file, then
        # as directory, then fall back to index.html
        try_files $uri $uri/ /index.html?$args;
        
        # Add debug headers
        add_header X-Debug-Path $uri always;
        add_header X-Debug-Args $args always;
        
        # Prevent caching of index.html
        add_header Cache-Control "no-store, no-cache, must-revalidate" always;
        expires 0;
    }

    # Serve robots.txt
    location = /robots.txt {
        add_header Content-Type text/plain;
        return 200 "User-agent: *\nDisallow: \nSitemap: https://qrlwallet.com/sitemap.xml\n";
    }

    # Serve sitemap.xml
    location = /sitemap.xml {
        add_header Content-Type application/xml;
        root /var/www/html;
    }

    # Error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    # Logging with more detail
    access_log /var/log/nginx/qrlwallet.access.log combined buffer=512k flush=1m;
    error_log /var/log/nginx/qrlwallet.error.log warn;
}
